name: CI and CD Pipeline

# Trigger on pull requests to any branch and pushes to main
on:
  pull_request:
    branches: [ "*" ]
  push:
    branches: [ "main" ]

jobs:
  # Job 1: CI - Build and test on PRs
  build_and_test:
    name: Build and Test (PR)
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'  # only run this job for PR events
    steps:
      - uses: actions/checkout@v4

      # Setup .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      # Restore .NET dependencies
      - name: Restore .NET dependencies
        run: dotnet restore

      # Build .NET project
      - name: Build .NET project
        run: dotnet build --configuration Release --no-restore

      # Test .NET project
      - name: Test .NET project
        run: dotnet test --no-build --verbosity normal

      # Setup Node.js
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      # Install NPM dependencies
      - name: Install NPM dependencies
        working-directory: ./client
        run: npm ci

      # Build SolidJS project
      - name: Build SolidJS project
        working-directory: ./client
        run: npm run build
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -t serving-solid-characters:test .
      
      - name: Run container for tests
        run: |
          docker run -d --name solidjs-test -p 3000:3000 serving-solid-characters:test
          # Give the container a few seconds to start
          # sleep 5
          # Optionally, check that the app is responding (HTTP 200)
          # curl -f http://localhost:3000 || (echo "App not responding" && exit 1)
      - name: Stop test container
        if: success()
        run: docker rm -f solidjs-test

  # Job 2: CD - Build and Deploy on main branch
  deploy:
    name: Build and Deploy (Main)
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # only run on push to main
    needs: build_and_test               # ensure CI job passes (optional)
    env:
      IMAGE_NAME: ghcr.io/colehend/serving-solid-characters:latest
    steps:
      - uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        # We use GitHub's built-in registry (GHCR) to store the image
        run: echo "${{ github.actor }}:${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and Push Image to GHCR
        run: |
          docker build -t ${{ env.IMAGE_NAME }} .
          docker push ${{ env.IMAGE_NAME }}

      - name: Prepare SSH Key
        # Install the SSH key from secrets to authenticate to the server
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts

      - name: Deploy to Linode
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
            docker pull ${{ env.IMAGE_NAME }} && \
            docker stop serving-solid-characters || true && \
            docker run -d --name serving-solid-characters --restart unless-stopped -p 3000:3000 ${{ env.IMAGE_NAME }} \
          "
